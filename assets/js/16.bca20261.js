(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{365:function(t,e,s){"use strict";s.r(e);var a=s(42),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"fixtures"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fixtures"}},[t._v("#")]),t._v(" Fixtures")]),t._v(" "),s("p",[t._v("This covers various ways to create fixtures.")]),t._v(" "),s("h2",{attrs:{id:"lazy-loading"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lazy-loading"}},[t._v("#")]),t._v(" Lazy-Loading")]),t._v(" "),s("p",[t._v("It's possible to lazy-load fixture code for screen panels. This will split code for individual panel screens into separate file and will be loaded on demand. Otherwise, all fixture code is loaded right away and it defeats parts of the idea to make R4MP as flexible as possible. See "),s("code",[t._v("gazebo")]),t._v(" fixture for examples.")]),t._v(" "),s("p",[t._v("Two methods of lazy loading:")]),t._v(" "),s("h3",{attrs:{id:"insider"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#insider"}},[t._v("#")]),t._v(" Insider")]),t._v(" "),s("p",[t._v("When registering panels, provide a relative path to the screen component to lazy load:")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[t._v("screens"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p-2-screen-2'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gazebo/p2-screen-2.vue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),s("p",[t._v("The path should be relative to the fixtures home folder, and the "),s("code",[t._v("panel.ts")]),t._v(" will try to load a component from "),s("code",[t._v("src/fixtures/${screen}")]),t._v(".")]),t._v(" "),s("p",[t._v("This is the simplest way and it's recommended if you are coding fixtures.")]),t._v(" "),s("h3",{attrs:{id:"macho"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#macho"}},[t._v("#")]),t._v(" Macho")]),t._v(" "),s("p",[t._v("Provide a function that returns a promise resolving with a Vue component:")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[t._v("screens"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p-2-screen-1'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* webpackChunkName: "p-2-screen-1" */')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("./p2-screen-1.vue")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Here, "),s("code",[t._v("import")]),t._v(" will be picked up by webpack and used for code splitting, so it will only work for internal fixtures. For external fixtures, there are no rules for how your load external files; just return a promise with your component code and it should work.")]),t._v(" "),s("p",[t._v("Read "),s("a",{attrs:{href:"https://vuejs.org/v2/guide/components-dynamic-async.html#Async-Components",target:"_blank",rel:"noopener noreferrer"}},[t._v("Async Components"),s("OutboundLink")],1),t._v(" in Vue docs if you want more details.")])])}),[],!1,null,null,null);e.default=r.exports}}]);