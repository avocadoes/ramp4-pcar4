(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{374:function(e,n,t){"use strict";t.r(n);var a=t(42),s=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"configuration-language-switching"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuration-language-switching"}},[e._v("#")]),e._v(" Configuration Language Switching")]),e._v(" "),t("p",[e._v("The main configuration file in RAMP to use is determined by the current language of the app. Each language is restricted to being linked to a single config and is in the format of key-value pairings where the key is the language code with its associated formatted config object as the value.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("registeredConfigs = {\n    en: enConfig,\n    fr: frConfig,\n    es: esConfig\n}\n")])])]),t("h2",{attrs:{id:"registering-configs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#registering-configs"}},[e._v("#")]),e._v(" Registering Configs")]),e._v(" "),t("p",[e._v("In order to register a config on app startup, the user can pass in one or more configs as part of a constructor parameter when making the call to initialize the RAMP Instance.")]),e._v(" "),t("p",[e._v("In the RAMP instance constructor, the first config (required) will be registered for all supported app languages (contained in "),t("code",[e._v("i18n.messages")]),e._v("). Any subsequent config file will be registered directly to its specified language.")]),e._v(" "),t("p",[t("strong",[e._v("TODO")]),e._v(": link a doc on "),t("code",[e._v("i18n")]),e._v(" setup "),t("a",{attrs:{href:""}},[e._v("here")]),e._v(" when complete")]),e._v(" "),t("p",[e._v("A more detailed description of the process will be covered with the examples below.")]),e._v(" "),t("h3",{attrs:{id:"example-1-passing-a-single-config-in-ramp-instance-constructor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example-1-passing-a-single-config-in-ramp-instance-constructor"}},[e._v("#")]),e._v(" Example 1: Passing a single config in RAMP Instance constructor")]),e._v(" "),t("div",{staticClass:"language-typescript= extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("new RAMP.Instance(document.getElementById('app'), { en: enConfig })\n")])])]),t("p",[e._v("If the user chooses to pass a single config like above, RAMP will take that config and populate it for all available app languages in "),t("code",[e._v("i18n.messages")]),e._v(".")]),e._v(" "),t("p",[e._v("For example, if "),t("code",[e._v("i18n.messages")]),e._v(" contains "),t("strong",[e._v("en")]),e._v(", "),t("strong",[e._v("fr")]),e._v(" and "),t("strong",[e._v("es")]),e._v(", then the registered configs by the end of the instance constructor will look like this:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("registeredConfigs = {\n    'en': enConfig,\n    'fr': enConfig,\n    'es': enConfig\n}\n")])])]),t("h3",{attrs:{id:"example-2-passing-multiple-configs-in-ramp-instance-constructor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example-2-passing-multiple-configs-in-ramp-instance-constructor"}},[e._v("#")]),e._v(" Example 2: Passing multiple configs in RAMP Instance constructor")]),e._v(" "),t("div",{staticClass:"language-typescript= extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("new RAMP.Instance(document.getElementById('app'), {\n    en: enConfig,\n    fr: frConfig\n})\n")])])]),t("p",[e._v("If the user chooses to pass in more than one config file, each user specified language will be linked to its unique config, while any remaining languages in "),t("code",[e._v("i18n.messages")]),e._v(" will default to the first config passed in the parameter. The registered configs will look like this at the end of the instance constructor:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("registeredConfigs = {\n    'en': enConfig,\n    'fr': frConfig,\n    'es': enConfig\n}\n")])])]),t("h3",{attrs:{id:"switching-languages"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#switching-languages"}},[e._v("#")]),e._v(" Switching Languages")]),e._v(" "),t("p",[e._v("Switching to a different language in-app will cause RAMP to conduct an analysis on "),t("code",[e._v("registeredConfigs")]),e._v(" to identify the config pertaining to the new app language.")]),e._v(" "),t("p",[e._v("Say we change the app language from "),t("strong",[e._v("en")]),e._v(" to "),t("strong",[e._v("fr")]),e._v(". In the first example, the new active config remains the same ("),t("code",[e._v("enConfig")]),e._v(") and in the second example, the new active config changes from "),t("code",[e._v("enConfig")]),e._v(" to "),t("code",[e._v("frConfig")]),e._v(".")]),e._v(" "),t("p",[t("strong",[e._v("Note")]),e._v(": If the app switches to a language that is not associated with a config (i.e., language unsupported by RAMP), an error will be thrown with a message informing the user.")])])}),[],!1,null,null,null);n.default=s.exports}}]);